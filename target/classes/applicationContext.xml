<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
 
	<context:property-placeholder location="WEB-INF/classes/jdbc-mysql.properties" ignore-unresolvable="true" />  
	<context:property-placeholder location="WEB-INF/classes/redis.properties" ignore-unresolvable="true" /> 
	<!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
	<context:component-scan base-package="com.zdh" />
	<context:annotation-config /> 
	<!-- 把标记了@Controller注解的类转换为bean --> 
	<context:component-scan base-package="com.zdh.back.test.controller" /> 
	<!-- 数据源的配置 --> 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
		<property name="driverClassName" value="${datasource.driverClassName}" /> 
		<property name="url" value="${datasource.url}" /> 
		<property name="username" value="${datasource.username}" /> 
		<property name="password" value="${datasource.password}" /> 
		<!-- data source configuration --> 
		<property name="initialSize" value="${c3p0.initialPoolSize}" /><!-- initial connections --> 
		<property name="maxActive" value="10" /><!-- MAX connections --> 
		<property name="maxIdle" value="10" /><!-- MAX idle connections --> 
		<property name="minIdle" value="5" /><!-- MIN idle connections --> 
		<!-- 处理mysql 8小时自动断开连接的问题 --> 
		<property name="testWhileIdle" value="true" /> 
		<property name="testOnBorrow" value="false" /> 
		<property name="testOnReturn" value="false" /> 
		<property name="validationQuery" value="select 1" /> 
		<property name="timeBetweenEvictionRunsMillis" value="20000" /> 
		<property name="numTestsPerEvictionRun" value="100" /> 
	</bean> 
 
	<!-- 配置Jdbc模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置Dao -->  
	<bean id="baseDao" class="com.zdh.core.base.dao.impl.BaseDaoImpl" abstract="true">  
		<property name="jdbcTemplate" ref="jdbcTemplate"/>  
	</bean>  
	<bean id="productDao" class="com.zdh.core.base.test.dao.impl.ProductDaoImpl" parent="baseDao"/>
	<bean id="productService" class="com.zdh.core.base.test.service.impl.ProductServiceImpl"/>
	
	<!--  jedis spring   -->
    
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxIdle" value="${redis.maxIdle}" />  
		<property name="maxTotal" value="${redis.maxTotal}" />  
	</bean>  
      
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" > 
		<property name="hostName" value="${redis.server}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
		<!-- <property name="password"  value="xccredisserver"></property> -->
	</bean> 
      
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
		<property name="connectionFactory"   ref="connectionFactory" />  
	</bean> 
    
	<!-- jedis spring end -->
    
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
 
 	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="maxUploadSize" value="50000000" />  
	</bean>
	<mvc:resources mapping="/upload/**" location="/upload/" />
	<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression=" execution(* com.service..*(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
 
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- 配置视图解析器，将ModelAndView及字符串解析为具体的页面 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:viewClass="org.springframework.web.servlet.view.JstlView" p:prefix="/WEB-INF/jsp/"
		p:suffix=".jsp" />
</beans>
